-- Databricks notebook source
CREATE TABLE IF NOT EXISTS TRANSIENT_DL.LKP_SRC_TO_REF_HUB_STORE_VISITS 
(
SOURCE_SYSTEM_ID INTEGER ,
SOURCE_SYSTEM_NAME STRING ,
SOURCE_SYSTEM_NATURAL_KEY STRING ,
STORE_RHID INTEGER ,
STORE_GRPID STRING ,
EFFECTIVE_START_TIMESTAMP TIMESTAMP ,
EFFECTIVE_END_TIMESTAMP TIMESTAMP,
REC_CREATE_TIMESTAMP TIMESTAMP
)
USING DELTA 
LOCATION 's3://skx-dataeng-nonprod-datalake-staging/transient/datalake/integrated/lkp_src_to_ref_hub_store_visits' 
TBLPROPERTIES ('layer'='SILVER');

-- COMMAND ----------

CREATE TABLE IF NOT EXISTS TRANSIENT_DL.STORE_TRAFFIC_BASE_DAILY
USING DELTA 
LOCATION 's3://skx-dataeng-nonprod-datalake-staging/transient/datalake/integrated/store_traffic_base_daily' 
TBLPROPERTIES ('LAYER' = 'SILVER')
AS 
SELECT * 
FROM BRZ_CURR_AXPER.STORE_TRAFFIC  
WHERE REC_UPDATE_TIMESTAMP > NVL(( SELECT MAX(SRC_LAST_UPD_TIMESTAMP) FROM DELTA_LOGS.USECASE_AUDIT_LOGS 
                                    WHERE JOBNAME='SJ3-SLV agg_store_visits_daily' AND LOAD_STATUS = 'COMPLETED'),
                                    TO_DATE('1900-01-01','yyyy-MM-dd'));

-- COMMAND ----------

INSERT OVERWRITE TRANSIENT_DL.LKP_SRC_TO_REF_HUB_STORE_VISITS
SELECT
  HUB_STORE_VISITS.SOURCE_SYSTEM_ID,
  LKP_SRC_SYS_STORE_VISITS.SOURCE_SYSTEM_NAME,
  HUB_STORE_VISITS.SOURCE_SYSTEM_NATURAL_KEY,
  STORE.STORE_RHID,
  STORE.STORE_GRPID,
  STORE.EFFECTIVE_START_TIMESTAMP,
  STORE.EFFECTIVE_END_TIMESTAMP,
  CURRENT_TIMESTAMP REC_CREATE_TIMESTAMP
FROM
  REF_HUB.LKP_SRC_TO_REF_HUB HUB_STORE_VISITS
  INNER JOIN REF_HUB.LKP_SOURCE_SYSTEM LKP_SRC_SYS_STORE_VISITS 
  ON LKP_SRC_SYS_STORE_VISITS.SOURCE_SYSTEM_ID = HUB_STORE_VISITS.SOURCE_SYSTEM_ID
  INNER JOIN REF_HUB.MST_STORE STORE 
  ON HUB_STORE_VISITS.GRPID = STORE.STORE_GRPID
  WHERE HUB_STORE_VISITS.REF_HUB_TABLE_NAME = 'MST_STORE'
  AND LKP_SRC_SYS_STORE_VISITS.SOURCE_SYSTEM_NAME = 'APROPOS';

-- COMMAND ----------

select count(*) row_count from TRANSIENT_DL.LKP_SRC_TO_REF_HUB_STORE_VISITS;

-- COMMAND ----------

INSERT OVERWRITE TRANSIENT_DL.STORE_TRAFFIC_BASE_DAILY
SELECT * FROM BRZ_CURR_AXPER.STORE_TRAFFIC  
WHERE REC_UPDATE_TIMESTAMP > NVL(( SELECT MAX(SRC_LAST_UPD_TIMESTAMP) FROM DELTA_LOGS.USECASE_AUDIT_LOGS 
                                    WHERE JOBNAME='SJ3-SLV agg_store_visits_daily' AND LOAD_STATUS = 'COMPLETED'),
                                    TO_DATE('1900-01-01','yyyy-MM-dd'));

-- COMMAND ----------

select count(*) from TRANSIENT_DL.STORE_TRAFFIC_BASE_DAILY;

-- COMMAND ----------

INSERT INTO DELTA_LOGS.USECASE_AUDIT_LOGS 
SELECT 
'SJ3-SLV agg_store_visits_daily',
MAX(REC_UPDATE_TIMESTAMP),
NULL, 
CURRENT_TIMESTAMP ,
'SJ3-SLV agg_store_visits_daily', 
NULL,
NULL
FROM TRANSIENT_DL.STORE_TRAFFIC_BASE_DAILY ;

-- COMMAND ----------

MERGE INTO SLV_RETAIL_SALES.AGG_STORE_VISITS_DAILY 
USING (
  SELECT
    VISIT_DATE_KEY,
    STORE_RHID,
    STORE_GRPID,
    VISIT_DATE,
    ENTRY_COUNT,
    EXIT_COUNT,
    CURRENT_TIMESTAMP REC_CREATE_TIMESTAMP,
    'DL_JOB_NAME' REC_CREATE_USER_NAME,
    CURRENT_TIMESTAMP REC_UPDATE_TIMESTAMP,
    'DL_JOB_NAME' REC_UPDATE_USER_NAME
  FROM
    (
      SELECT
        AXPER_STORE.VISIT_DATE_KEY,
        NVL(HUB_STORE.STORE_RHID,-1) AS STORE_RHID,
        HUB_STORE.STORE_GRPID,
        AXPER_STORE.VISIT_DATE,
        SUM(AXPER_STORE.ENTRIES) AS ENTRY_COUNT,
        SUM(AXPER_STORE.EXITS) AS EXIT_COUNT
      FROM
        TRANSIENT_DL.STORE_TRAFFIC_BASE_DAILY AXPER_STORE
        LEFT OUTER JOIN TRANSIENT_DL.LKP_SRC_TO_REF_HUB_STORE_VISITS HUB_STORE 
        ON AXPER_STORE.STORE_NUMBER || '_' || HUB_STORE.SOURCE_SYSTEM_ID = HUB_STORE.SOURCE_SYSTEM_NATURAL_KEY
        AND AXPER_STORE.VISIT_DATE BETWEEN HUB_STORE.EFFECTIVE_START_TIMESTAMP AND HUB_STORE.EFFECTIVE_END_TIMESTAMP        
      GROUP BY
        NVL(HUB_STORE.STORE_RHID,-1),
        HUB_STORE.STORE_GRPID,
        AXPER_STORE.VISIT_DATE,
        AXPER_STORE.VISIT_DATE_KEY
    )
) SRC 
ON AGG_STORE_VISITS_DAILY.STORE_RHID = SRC.STORE_RHID 
AND AGG_STORE_VISITS_DAILY.VISIT_DATE = SRC.VISIT_DATE
WHEN MATCHED THEN UPDATE SET *
WHEN NOT MATCHED THEN INSERT *;

-- COMMAND ----------

UPDATE DELTA_LOGS.USECASE_AUDIT_LOGS
SET LOAD_STATUS = 'COMPLETED' , 
REC_UPDATE_TIMESTAMP = CURRENT_TIMESTAMP,
REC_UPDATE_USER_NAME = 'SJ3-SLV agg_store_visits_daily'
WHERE JOBNAME = 'SJ3-SLV agg_store_visits_daily'
AND REC_CREATE_TIMESTAMP = ( SELECT MAX(REC_CREATE_TIMESTAMP) FROM DELTA_LOGS.USECASE_AUDIT_LOGS 
                              WHERE JOBNAME = 'SJ3-SLV agg_store_visits_daily' AND LOAD_STATUS IS NULL)
AND LOAD_STATUS IS NULL;

-- COMMAND ----------

--input count
select nvl(sum(count),0) row_count from (
select 1 as count
from TRANSIENT_DL.STORE_TRAFFIC_BASE_DAILY AXPER_STORE
LEFT OUTER JOIN TRANSIENT_DL.LKP_SRC_TO_REF_HUB_STORE_VISITS HUB_STORE 
        ON AXPER_STORE.STORE_NUMBER || '_' || HUB_STORE.SOURCE_SYSTEM_ID = HUB_STORE.SOURCE_SYSTEM_NATURAL_KEY
        AND AXPER_STORE.VISIT_DATE BETWEEN HUB_STORE.EFFECTIVE_START_TIMESTAMP AND HUB_STORE.EFFECTIVE_END_TIMESTAMP 
group by NVL(HUB_STORE.STORE_RHID,-1) , VISIT_DATE
 );

-- COMMAND ----------

--output count
select count(*) row_count from SLV_RETAIL_SALES.AGG_STORE_VISITS_DAILY 
where REC_UPDATE_TIMESTAMP = (select max(REC_UPDATE_TIMESTAMP) from SLV_RETAIL_SALES.AGG_STORE_VISITS_DAILY ) 
AND REC_UPDATE_TIMESTAMP > (SELECT MAX(REC_CREATE_TIMESTAMP) FROM DELTA_LOGS.USECASE_AUDIT_LOGS WHERE JOBNAME = 'SJ3-SLV agg_store_visits_daily' AND LOAD_STATUS IS NOT NULL ) ;
